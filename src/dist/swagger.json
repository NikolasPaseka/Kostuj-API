{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Kostuj API endpoints",
        "description": "",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "servers": [
        {
            "url": "https://kostuj-api-production.up.railway.app/",
            "description": "Mocked development"
        }
    ],
    "tags": [],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/catalogues": {
            "get": {
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "description": "ID of the cat that we want to match",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": true,
                        "description": "ID of the cat that we want to match",
                        "type": "integer"
                    }
                ],
                "tags": [
                    "Catalogues"
                ],
                "summary": "Get paginated catalogues result",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Cats"
                        }
                    }
                }
            }
        },
        "/catalogues/search": {
            "get": {
                "parameters": [
                    {
                        "name": "title",
                        "in": "query",
                        "required": true,
                        "description": "title of the catalogue",
                        "type": "string"
                    }
                ],
                "tags": [
                    "Catalogues"
                ],
                "summary": "Get result from catalogues search by title",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Cats"
                        }
                    }
                }
            }
        },
        "/catalogues/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "ID of the catalogue that should be matched",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Catalogues"
                ],
                "summary": "Get cat with given ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Cat with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Cat"
                        }
                    },
                    "404": {
                        "description": "Failed. Cat not found."
                    }
                }
            }
        },
        "/catalogues/{id}/samples": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "ID of the catalogue that should be matched",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Catalogues"
                ],
                "summary": "Get all wine samples within matched catalogue",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Cat with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Cat"
                        }
                    },
                    "404": {
                        "description": "Failed. Cat not found."
                    }
                }
            }
        },
        "/catalogues/samples/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "ID of the wine sample that should be matched",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Catalogues"
                ],
                "summary": "Get wine sample with given ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Cat with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Cat"
                        }
                    },
                    "404": {
                        "description": "Failed. Cat not found."
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Authenticate user",
                "requestBody": {
                    "description": "Cat Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Cat"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user in the system",
                "requestBody": {
                    "description": "Cat Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Cat"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/users/commissionCatalogues/ratedSamples/{catalogueId}": {
            "get": {
                "parameters": [
                    {
                        "name": "catalogueId",
                        "in": "path",
                        "required": true,
                        "description": "ID of the cat that we want to match",
                        "type": "integer"
                    }
                ],
                "tags": [
                    "Catalogues"
                ],
                "summary": "Get all rated samples within catalogue",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Cats"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Add wine samples to rated",
                "requestBody": {
                    "description": "Cat Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Cat"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update rating of wine sample",
                "requestBody": {
                    "description": "Cat Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Cat"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/users/tastedSamples/{catalogueId}": {
            "get": {
                "parameters": [
                    {
                        "name": "catalogueId",
                        "in": "path",
                        "required": true,
                        "description": "ID of the catalogue that we want to match",
                        "type": "integer"
                    }
                ],
                "tags": [
                    "Catalogues"
                ],
                "summary": "Get all saved information about tasted wine samples within given catalogue",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Cats"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Add wine samples to rated",
                "requestBody": {
                    "description": "Cat Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Cat"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete tasted wine sample",
                "requestBody": {
                    "description": "Cat Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Cat"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/mapLocations": {
            "get": {
                "tags": [
                    "Map locations"
                ],
                "summary": "Get all locations from wineries and wine feasts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Cat"
                        }
                    },
                    "404": {
                        "description": "Failed. Cat not found."
                    }
                }
            }
        },
        "/wines/{id}": {
            "get": {
                "tags": [
                    "Wines"
                ],
                "summary": "Get wine with given ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Cat with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Cat"
                        }
                    },
                    "404": {
                        "description": "Failed. Cat not found."
                    }
                }
            }
        },
        "/wines/grapeVarietals": {
            "get": {
                "tags": [
                    "Wines"
                ],
                "summary": "Get all grape varieatals",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Cat"
                        }
                    },
                    "404": {
                        "description": "Failed. Cat not found."
                    }
                }
            }
        }
    },
    "definitions": {
        "id": {
            "properties": {
                "uuid": {
                    "type": "string"
                }
            }
        },
        "Cat": {
            "type": "object",
            "properties": {
                "genus": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "isHungry": {
                    "type": "boolean"
                },
                "lastFedDate": {
                    "type": "string"
                }
            }
        },
        "Cats": {
            "type": "object",
            "properties": {
                "cats": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/Cat"
                    }
                }
            }
        }
    }
}
